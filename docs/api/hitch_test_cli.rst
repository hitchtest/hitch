Hitch Test Command Line Interface
=================================

.. note::

    This documentation applies to the latest version of hitchtest.

To run a specific .test file::

  $ hitch test stub.test

To run *all* of the tests in a directory (and its subdirectories), e.g.::

  $ hitch test .

You can also specify multiple files and directories to test, e.g.::

  $ hitch test apptests/ apitests/ stub.test


Tags
----

To only run tests that match specified tags, you can use the --tag switch to specify
the tests you want to run::

  $ hitch test . --tags tag1,tag2,tag3


Use different settings
----------------------

To use a different settings file, you can use the --settings switch::

  $ hitch test . --settings ci.settings

To specify individual settings on the command line, you can use the --extra switch::

  $ hitch test . --extra '{"failfast":true}'

Note that you must specify the settings using JSON.

For more about settings and configuration see :doc:`/api/settings`


Display Test YAML
-----------------

If you are using Jinja2 to parameterize your tests, you may want
to just display the YAML generated by it to check that your jinja2 is
generating the YAML correctly.

You can do that using the --yaml switch::

  $ hitch test simple_reminder.test --yaml

.. code-block:: yaml

    # /home/colm/hitch/django-remindme/django-remindme-tests/simple_reminder.test
    - name: Sign up, create reminder and wait for email reminder to arrive in python 2.7.10
      preconditions:
        python_version: "2.7.10"
      scenario:
        - Load website
        - Click: register
        - Fill form:
            id_username: django
            id_email: django@reinhardt.com
            id_password1: jazzguitar
            id_password2: jazzguitar
        - Click submit
        - Click: create
        - Fill form:
            id_description: Remind me about upcoming gig.
            id_when: 30 days
        - Click: create
        - Wait for email:
            Containing: Confirm E-mail Address
        - Confirm emails sent: 1
        - Time travel:
            Days: 30
        - Wait for email:
            Containing: Remind me about upcoming gig.



    - name: Sign up, create reminder and wait for email reminder to arrive in python 3.4.3
      preconditions:
        python_version: "3.4.3"
      scenario:
        - Load website
        - Click: register
        - Fill form:
            id_username: django
            id_email: django@reinhardt.com
            id_password1: jazzguitar
            id_password2: jazzguitar
        - Click submit
        - Click: create
        - Fill form:
            id_description: Remind me about upcoming gig.
            id_when: 30 days
        - Click: create
        - Wait for email:
            Containing: Confirm E-mail Address
        - Confirm emails sent: 1
        - Time travel:
            Days: 30
        - Wait for email:
            Containing: Remind me about upcoming gig.
